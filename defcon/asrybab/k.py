from Crypto.Util.number import *
e=80123767140258783574409416122404512267890791942096897899946588168355428594094184506118144728553655872860753259538461428633196680800554058322030670739130772064151981240378734125396032476391897771717839882045318217628058844746350543432770838791717851053458602944064746304775462823822809174314987563975138481387989
n=78186981917377011401837943530993004609374874139988345505285292453980805767409916894189748463214625170859450106428717600117838270920475830475723063083652756148335571512000452112721211954037224024252600626146826512662539633275286812622826718354473534003699741410187002847839315917998566887250342874340484010853
p=8842340296402135834592888055589552052236154024677275935757908211897846256575652407957704644541490226868418584768374154372317409696092611240744813864770711
q=8842340296402135834174860792163840239292246097579287030585024035397693795248764337764483948740816440229964037472544112092849602164528666613060910519239523
k=31350209530842182031931218707264839820750324129272527437499888608954046175132779281610521901824857
d=30592399149219799356939845230774449359706797587638413444284816383295657521797252658495003050969
print n.bit_length()
print (e*d-1)/k
print (e*d-1)%k
print n-p*q
print GCD(d,k)
print d>>313
print n
print n-(d*d*d*d)
