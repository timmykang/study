
# This file was *autogenerated* from the file sol.sage
from sage.all_cmdline import *   # import sage library

_sage_const_21652247421304131782679331804390761485569 = Integer(21652247421304131782679331804390761485569); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0); _sage_const_200 = Integer(200); _sage_const_15 = Integer(15)
import dpkt
from Crypto.Util.number import *
f1 = open('newfile.pcap')
pcap = dpkt.pcap.Reader(f1)
flag = ''
challenge = []
response = []  
p = _sage_const_21652247421304131782679331804390761485569 
## (311*313*317*331*337*347*349*353)^2
for ts, pkt in pcap:
    tmp = dpkt.ethernet.Ethernet(pkt).data.data.data
    if(len(str(tmp)) != _sage_const_0 ):
        tmp1 = []
        tcp_data = str(tmp)
        if('ACCESS' in tcp_data):
            flag = tcp_data[_sage_const_15 :-_sage_const_1 ]
        elif(len(tcp_data) > _sage_const_200 ):
            tmp1 = tcp_data[:-_sage_const_1 ].split(" ")
            for i in range(len(tmp1)):
                tmp1[i] = int(tmp1[i])
            challenge.append(tmp1)
        else:
            response.append(int(tmp[:-_sage_const_1 ]))
f1.close()

