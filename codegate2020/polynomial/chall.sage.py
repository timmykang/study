
# This file was *autogenerated* from the file chall.sage
from sage.all_cmdline import *   # import sage library

_sage_const_143 = Integer(143); _sage_const_1038 = Integer(1038); _sage_const_3023 = Integer(3023); _sage_const_710 = Integer(710); _sage_const_1034 = Integer(1034); _sage_const_189 = Integer(189); _sage_const_2020 = Integer(2020); _sage_const_1224 = Integer(1224); _sage_const_1134 = Integer(1134); _sage_const_1136 = Integer(1136); _sage_const_1449 = Integer(1449); _sage_const_699 = Integer(699); _sage_const_914 = Integer(914); _sage_const_1333 = Integer(1333); _sage_const_1975 = Integer(1975); _sage_const_3717 = Integer(3717); _sage_const_1202 = Integer(1202); _sage_const_85 = Integer(85); _sage_const_111 = Integer(111); _sage_const_2627 = Integer(2627); _sage_const_117 = Integer(117); _sage_const_116 = Integer(116); _sage_const_1209 = Integer(1209); _sage_const_1208 = Integer(1208); _sage_const_761 = Integer(761); _sage_const_3252 = Integer(3252); _sage_const_184 = Integer(184); _sage_const_1386 = Integer(1386); _sage_const_1628 = Integer(1628); _sage_const_1383 = Integer(1383); _sage_const_1029 = Integer(1029); _sage_const_1028 = Integer(1028); _sage_const_531 = Integer(531); _sage_const_1432 = Integer(1432); _sage_const_446 = Integer(446); _sage_const_4010 = Integer(4010); _sage_const_16 = Integer(16); _sage_const_907 = Integer(907); _sage_const_825 = Integer(825); _sage_const_2438 = Integer(2438); _sage_const_2536 = Integer(2536); _sage_const_101 = Integer(101); _sage_const_2981 = Integer(2981); _sage_const_1983 = Integer(1983); _sage_const_3050 = Integer(3050); _sage_const_3053 = Integer(3053); _sage_const_751 = Integer(751); _sage_const_2346 = Integer(2346); _sage_const_582 = Integer(582); _sage_const_225 = Integer(225); _sage_const_3059 = Integer(3059); _sage_const_453 = Integer(453); _sage_const_223 = Integer(223); _sage_const_994 = Integer(994); _sage_const_950 = Integer(950); _sage_const_1152 = Integer(1152); _sage_const_525 = Integer(525); _sage_const_1157 = Integer(1157); _sage_const_938 = Integer(938); _sage_const_326 = Integer(326); _sage_const_358 = Integer(358); _sage_const_328 = Integer(328); _sage_const_2728 = Integer(2728); _sage_const_1392 = Integer(1392); _sage_const_2687 = Integer(2687); _sage_const_528 = Integer(528); _sage_const_1445 = Integer(1445); _sage_const_3307 = Integer(3307); _sage_const_834 = Integer(834); _sage_const_1251 = Integer(1251); _sage_const_837 = Integer(837); _sage_const_1255 = Integer(1255); _sage_const_134 = Integer(134); _sage_const_3632 = Integer(3632); _sage_const_447 = Integer(447); _sage_const_3636 = Integer(3636); _sage_const_1655 = Integer(1655); _sage_const_2445 = Integer(2445); _sage_const_1226 = Integer(1226); _sage_const_3737 = Integer(3737); _sage_const_238 = Integer(238); _sage_const_747 = Integer(747); _sage_const_423 = Integer(423); _sage_const_230 = Integer(230); _sage_const_231 = Integer(231); _sage_const_426 = Integer(426); _sage_const_489 = Integer(489); _sage_const_259 = Integer(259); _sage_const_555 = Integer(555); _sage_const_485 = Integer(485); _sage_const_921 = Integer(921); _sage_const_1798 = Integer(1798); _sage_const_2692 = Integer(2692); _sage_const_1005 = Integer(1005); _sage_const_1000 = Integer(1000); _sage_const_1003 = Integer(1003); _sage_const_3110 = Integer(3110); _sage_const_801 = Integer(801); _sage_const_803 = Integer(803); _sage_const_807 = Integer(807); _sage_const_120 = Integer(120); _sage_const_3627 = Integer(3627); _sage_const_964 = Integer(964); _sage_const_3742 = Integer(3742); _sage_const_1492 = Integer(1492); _sage_const_637 = Integer(637); _sage_const_433 = Integer(433); _sage_const_354 = Integer(354); _sage_const_1499 = Integer(1499); _sage_const_320 = Integer(320); _sage_const_110 = Integer(110); _sage_const_3599 = Integer(3599); _sage_const_2584 = Integer(2584); _sage_const_3452 = Integer(3452); _sage_const_1783 = Integer(1783); _sage_const_1171 = Integer(1171); _sage_const_549 = Integer(549); _sage_const_201 = Integer(201); _sage_const_3592 = Integer(3592); _sage_const_1400 = Integer(1400); _sage_const_815 = Integer(815); _sage_const_1406 = Integer(1406); _sage_const_791 = Integer(791); _sage_const_83 = Integer(83); _sage_const_1272 = Integer(1272); _sage_const_753 = Integer(753); _sage_const_369 = Integer(369); _sage_const_3560 = Integer(3560); _sage_const_43 = Integer(43); _sage_const_44 = Integer(44); _sage_const_1085 = Integer(1085); _sage_const_1087 = Integer(1087); _sage_const_2502 = Integer(2502); _sage_const_3946 = Integer(3946); _sage_const_1080 = Integer(1080); _sage_const_649 = Integer(649); _sage_const_1813 = Integer(1813); _sage_const_315 = Integer(315); _sage_const_314 = Integer(314); _sage_const_3350 = Integer(3350); _sage_const_1826 = Integer(1826); _sage_const_2072 = Integer(2072); _sage_const_273 = Integer(273); _sage_const_3687 = Integer(3687); _sage_const_378 = Integer(378); _sage_const_360 = Integer(360); _sage_const_372 = Integer(372); _sage_const_3881 = Integer(3881); _sage_const_1426 = Integer(1426); _sage_const_784 = Integer(784); _sage_const_288 = Integer(288); _sage_const_1397 = Integer(1397); _sage_const_780 = Integer(780); _sage_const_2380 = Integer(2380); _sage_const_1241 = Integer(1241); _sage_const_55 = Integer(55); _sage_const_2762 = Integer(2762); _sage_const_1478 = Integer(1478); _sage_const_52 = Integer(52); _sage_const_50 = Integer(50); _sage_const_3814 = Integer(3814); _sage_const_1373 = Integer(1373); _sage_const_658 = Integer(658); _sage_const_3766 = Integer(3766); _sage_const_3767 = Integer(3767); _sage_const_898 = Integer(898); _sage_const_415 = Integer(415); _sage_const_2307 = Integer(2307); _sage_const_3288 = Integer(3288); _sage_const_3 = Integer(3); _sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0); _sage_const_1053 = Integer(1053); _sage_const_2838 = Integer(2838); _sage_const_466 = Integer(466); _sage_const_3379 = Integer(3379); _sage_const_3378 = Integer(3378); _sage_const_9 = Integer(9); _sage_const_1811 = Integer(1811); _sage_const_1742 = Integer(1742); _sage_const_361 = Integer(361); _sage_const_4027 = Integer(4027); _sage_const_870 = Integer(870); _sage_const_1250 = Integer(1250); _sage_const_275 = Integer(275); _sage_const_1463 = Integer(1463); _sage_const_877 = Integer(877); _sage_const_1695 = Integer(1695); _sage_const_1469 = Integer(1469); _sage_const_1109 = Integer(1109); _sage_const_1065 = Integer(1065); _sage_const_1342 = Integer(1342); _sage_const_1892 = Integer(1892); _sage_const_977 = Integer(977); _sage_const_176 = Integer(176); _sage_const_1952 = Integer(1952); _sage_const_576 = Integer(576); _sage_const_210 = Integer(210); _sage_const_2324 = Integer(2324); _sage_const_3985 = Integer(3985); _sage_const_197 = Integer(197); _sage_const_195 = Integer(195); _sage_const_2322 = Integer(2322); _sage_const_526 = Integer(526); _sage_const_3460 = Integer(3460); _sage_const_356 = Integer(356); _sage_const_1753 = Integer(1753); _sage_const_1127 = Integer(1127); _sage_const_2960408776014513590203667205130185225161547470030516261741102417822093600856513664346223496713014612247754765985505434047965417819771431223015026059243409921418043319365743779292681722097463141 = Integer(2960408776014513590203667205130185225161547470030516261741102417822093600856513664346223496713014612247754765985505434047965417819771431223015026059243409921418043319365743779292681722097463141); _sage_const_1683 = Integer(1683); _sage_const_1128 = Integer(1128); _sage_const_1325 = Integer(1325); _sage_const_1326 = Integer(1326); _sage_const_1197 = Integer(1197); _sage_const_1158 = Integer(1158); _sage_const_3544 = Integer(3544); _sage_const_3545 = Integer(3545); _sage_const_60 = Integer(60); _sage_const_1355 = Integer(1355); _sage_const_2650 = Integer(2650); _sage_const_3380 = Integer(3380); _sage_const_1219 = Integer(1219); _sage_const_160 = Integer(160); _sage_const_2656 = Integer(2656); _sage_const_237 = Integer(237); _sage_const_630 = Integer(630); _sage_const_457 = Integer(457); _sage_const_1889 = Integer(1889); _sage_const_565 = Integer(565)#!/usr/bin/env sage
from sage.misc.banner import version_dict
from Crypto.Util.number import long_to_bytes as l2b
from Crypto.Util.number import bytes_to_long as b2l
from Crypto.Util.number import inverse
from Padding import pad
from Crypto.Cipher import AES
from os import urandom

#assert version_dict()["major"] >= 9


class Chall:
    def __init__(self, N, p, q):
        self.N, self.p, self.q = N, p, q
        self.R = PolynomialRing(Integers(q), "x")
        self.x = self.R.gen()
        self.S = self.R.quotient(self.x ** N - _sage_const_1 , "x")
        self.h, self.f = None, None

    def random(self):
        return self.S([randint(-_sage_const_1 , _sage_const_1 ) for _ in range(self.N)])

    def keygen(self):
        while True:
            self.F = self.random()
            self.f = self.p * self.F + _sage_const_1 
            try:
                self.z = self.f ** -_sage_const_1 
            except:
                continue
            break
        while True:
            self.g = self.random()
            try:
                self.g ** -_sage_const_1 
            except:
                continue
            break
        self.h = self.p * self.z * self.g
        #print(list(self.h * self.f * self.random()))

    def getPublicKey(self):
        return list(self.h)

    def getPrivateKey(self):
        return list(self.f)

    def encrypt(self, m):
        m_encoded = self.encode(b2l(m))
        e = self.random() * self.h + self.S(m_encoded)
        return list(e)

    def decrypt(self, e, privkey):
        e, privkey = self.S(e), self.S(privkey)
        temp = map(Integer, list(privkey * e))
        temp = [t - self.q if t > self.q // _sage_const_2  else t for t in temp]
        temp = [t % self.p for t in temp]
        pt_encoded = [t - self.p if t > self.p // _sage_const_2  else t for t in temp]
        pt = l2b(self.decode(pt_encoded))
        return pt

    def encode(self, value):
        assert _sage_const_0  <= value < _sage_const_3  ** self.N
        out = []
        for _ in range(self.N):
            out.append(value % _sage_const_3  - _sage_const_1 )
            value -= value % _sage_const_3 
            value /= _sage_const_3 
        return out

    def decode(self, value):
        out = sum([(value[i] + _sage_const_1 ) * _sage_const_3  ** i for i in range(len(value))])
        return out

    def count(self, row):
        p = sum([e == _sage_const_1  for e in row])
        n = sum([e == self.q - _sage_const_1  for e in row])
        return p, len(row) - p - n, n


def wrapper(N, p, q, pt):
    chall = Chall(N, p, q)
    chall.keygen()
    print(chall.getPublicKey())
    print(chall.encrypt(pt))
    #chall.decrypt(x,chall.getPrivateKey())
    print(chall.count(list((chall.F))))
'''
if __name__ == "__main__":
    key = urandom(16)
    cipher = AES.new(key, AES.MODE_ECB)
    flag = pad(open("flag.txt", "rb").read(), 16)
    enc_flag = b2l(cipher.encrypt(flag))
    print(enc_flag)

    key1, key2 = key[:8], key[8:]

    wrapper(55, 3, 4027, key1)
    wrapper(60, 3, 1499, key2)
'''
chall1 = Chall(_sage_const_55 ,_sage_const_3 ,_sage_const_4027 )
pub1=[_sage_const_3627 , _sage_const_1889 , _sage_const_3460 , _sage_const_2627 , _sage_const_3545 , _sage_const_1478 , _sage_const_2307 , _sage_const_3378 , _sage_const_3350 , _sage_const_1272 , _sage_const_2445 , _sage_const_3881 , _sage_const_3110 , _sage_const_1628 , _sage_const_1798 , _sage_const_1826 , _sage_const_259 , _sage_const_1983 , _sage_const_453 , _sage_const_52 , _sage_const_2650 , _sage_const_834 , _sage_const_3307 , _sage_const_907 , _sage_const_2762 , _sage_const_3452 , _sage_const_1085 , _sage_const_3059 , _sage_const_3544 , _sage_const_1136 , _sage_const_3767 , _sage_const_2346 , _sage_const_1952 , _sage_const_699 , _sage_const_3023 , _sage_const_531 , _sage_const_1208 , _sage_const_1449 , _sage_const_3636 , _sage_const_1742 , _sage_const_2692 , _sage_const_1128 , _sage_const_1683 , _sage_const_1152 , _sage_const_2584 , _sage_const_637 , _sage_const_3053 , _sage_const_2072 , _sage_const_2687 , _sage_const_1811 , _sage_const_2981 , _sage_const_3288 , _sage_const_2324 , _sage_const_3632 , _sage_const_1813 ]
enc_1 = [_sage_const_426 , _sage_const_3379 , _sage_const_3985 , _sage_const_160 , _sage_const_2502 , _sage_const_3592 , _sage_const_55 , _sage_const_1753 , _sage_const_3599 , _sage_const_2656 , _sage_const_2380 , _sage_const_582 , _sage_const_1038 , _sage_const_1028 , _sage_const_791 , _sage_const_1695 , _sage_const_1783 , _sage_const_3814 , _sage_const_3687 , _sage_const_3742 , _sage_const_1892 , _sage_const_1053 , _sage_const_2728 , _sage_const_3946 , _sage_const_801 , _sage_const_238 , _sage_const_3766 , _sage_const_1355 , _sage_const_1219 , _sage_const_528 , _sage_const_3560 , _sage_const_9 , _sage_const_3737 , _sage_const_1975 , _sage_const_1469 , _sage_const_85 , _sage_const_1373 , _sage_const_3717 , _sage_const_195 , _sage_const_3252 , _sage_const_2020 , _sage_const_1087 , _sage_const_201 , _sage_const_2536 , _sage_const_1655 , _sage_const_3380 , _sage_const_2322 , _sage_const_2438 , _sage_const_803 , _sage_const_2838 , _sage_const_1034 , _sage_const_457 , _sage_const_3050 , _sage_const_4010 , _sage_const_231 ]

chall2 = Chall(_sage_const_60 ,_sage_const_3 ,_sage_const_1499 )
pub2 = [_sage_const_314 , _sage_const_1325 , _sage_const_1386 , _sage_const_176 , _sage_const_369 , _sage_const_1029 , _sage_const_877 , _sage_const_1255 , _sage_const_111 , _sage_const_1226 , _sage_const_117 , _sage_const_0 , _sage_const_210 , _sage_const_761 , _sage_const_938 , _sage_const_273 , _sage_const_525 , _sage_const_751 , _sage_const_1085 , _sage_const_372 , _sage_const_1333 , _sage_const_898 , _sage_const_780 , _sage_const_44 , _sage_const_649 , _sage_const_1463 , _sage_const_326 , _sage_const_354 , _sage_const_116 , _sage_const_1080 , _sage_const_1065 , _sage_const_1109 , _sage_const_358 , _sage_const_275 , _sage_const_1209 , _sage_const_964 , _sage_const_101 , _sage_const_950 , _sage_const_415 , _sage_const_1492 , _sage_const_1197 , _sage_const_921 , _sage_const_1000 , _sage_const_1028 , _sage_const_1400 , _sage_const_43 , _sage_const_1003 , _sage_const_914 , _sage_const_447 , _sage_const_360 , _sage_const_1171 , _sage_const_1109 , _sage_const_223 , _sage_const_1134 , _sage_const_1157 , _sage_const_1383 , _sage_const_784 , _sage_const_189 , _sage_const_870 , _sage_const_565 ]
enc_2 = [_sage_const_378 , _sage_const_753 , _sage_const_466 , _sage_const_825 , _sage_const_320 , _sage_const_658 , _sage_const_630 , _sage_const_288 , _sage_const_16 , _sage_const_576 , _sage_const_134 , _sage_const_914 , _sage_const_549 , _sage_const_489 , _sage_const_197 , _sage_const_1392 , _sage_const_328 , _sage_const_361 , _sage_const_1241 , _sage_const_50 , _sage_const_710 , _sage_const_315 , _sage_const_526 , _sage_const_1250 , _sage_const_977 , _sage_const_453 , _sage_const_225 , _sage_const_433 , _sage_const_1342 , _sage_const_1005 , _sage_const_1432 , _sage_const_143 , _sage_const_1326 , _sage_const_1426 , _sage_const_1251 , _sage_const_1397 , _sage_const_237 , _sage_const_1202 , _sage_const_555 , _sage_const_83 , _sage_const_994 , _sage_const_446 , _sage_const_1406 , _sage_const_356 , _sage_const_1127 , _sage_const_1469 , _sage_const_485 , _sage_const_1034 , _sage_const_1224 , _sage_const_230 , _sage_const_1445 , _sage_const_825 , _sage_const_630 , _sage_const_1158 , _sage_const_815 , _sage_const_807 , _sage_const_837 , _sage_const_747 , _sage_const_423 , _sage_const_184 ]
tmp = list(((chall1.S(pub1) ** -_sage_const_1 ) * _sage_const_3 ) ** -_sage_const_1 ) #g/f
tmp1 = list(((chall2.S(pub2) ** -_sage_const_1 ) * _sage_const_3 ) ** -_sage_const_1 ) #g/f

def shifting(x):
    tmp = x[len(x)-_sage_const_1 ]
    for i in range(len(x)-_sage_const_1 , _sage_const_0 , -_sage_const_1 ):
        x[i] = x[i-_sage_const_1 ]
    x[_sage_const_0 ] = tmp

M = matrix(_sage_const_110 )
M1 = matrix(_sage_const_120 )

for i in range(_sage_const_55 ):
    M[i,i] = _sage_const_4027 
for i in range(_sage_const_55 ,_sage_const_110 ):
    M[i,i] = _sage_const_1 
    for j in range(_sage_const_55 ):
        M[i,j] = tmp[j]
    shifting(tmp)
M = M.LLL()
f_1 = list(M[_sage_const_0 ][_sage_const_55 :])

for i in range(_sage_const_55 ):
    f_1[i] = -f_1[i]

for i in range(_sage_const_55 -f_1.index(-_sage_const_2 )):
    shifting(f_1)

for i in range(_sage_const_60 ):
    M1[i,i] = _sage_const_1499 
for i in range(_sage_const_60 ,_sage_const_120 ):
    M1[i,i] = _sage_const_1 
    for j in range(_sage_const_60 ):
        M1[i,j] = tmp1[j]
    shifting(tmp1)
M1 = M1.LLL()

f_2 = list(M1[_sage_const_0 ][_sage_const_60 :])

for i in range(_sage_const_60 -f_2.index(-_sage_const_2 )):
    shifting(f_2)

print(f_2)


encflag = l2b(_sage_const_2960408776014513590203667205130185225161547470030516261741102417822093600856513664346223496713014612247754765985505434047965417819771431223015026059243409921418043319365743779292681722097463141 )
key1 = chall1.decrypt(enc_1, f_1)
key2 = chall2.decrypt(enc_2, f_2)
key = key1 + key2
cipher = AES.new(key, AES.MODE_ECB)
print(cipher.decrypt(encflag))



